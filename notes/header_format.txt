First thing the rom does is fetch 16 bytes from the serial flash and then use these offsets for various things before determining what to load and to where

  00 01 02 03      04 05 06 07      08 09 0a 0b      0c 0d      0e      0f
[ F9 00 00 00 ]  [ 1C 00 00 00 ]  [ 00 15 01 00 ]  [ E6 E9 ]  [ 04 ]  [ 00 ]

H/W specific
0f: Some sort of 0 / !0 flag. Anything else that 0 makes it OR 0x1000000 (0x40010028)
0e: HW configuration of some sort. It's read and then sent to h400D_5000 + h10

Generic
0c: Patchsum (make header modsum-16 0)
08: Location to jump to / where to store the image in ram
04: Serial flash address to read from
00: nDwords to copy (byte count / 4)

Their checksum consist of a modsum-16.
One could deref and just read as u16 on little endian machines but it's safer to read both bytes, swap and manually do it (portability)


Notes:
Noticed the rom only care about the total modsum of everything copied to ram but offset 0C is most likely only a modsum of the header.

